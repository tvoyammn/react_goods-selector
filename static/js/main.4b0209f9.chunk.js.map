{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","clickOnGood","event","currGood","preventDefault","includes","removeButtonClick","addButtonClick","goodToAdd","setState","prevState","goodToRemove","filter","good","resetButtonClick","getSelectedGoods","length","join","replace","concat","this","className","type","onClick","map","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAWIC,E,4MACJC,MAAe,CACbC,cAAe,I,EAGjBC,YAAc,SAACC,EAAyBC,GACtCD,EAAME,iBACoB,EAAKL,MAAvBC,cAEUK,SAASF,GACzB,EAAKG,kBAAkBH,GAEvB,EAAKI,eAAeJ,I,EAIxBI,eAAiB,SAACC,GAChB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5BV,cAAc,GAAD,mBAAMU,EAAUV,eAAhB,CAA+BQ,S,EAIhDF,kBAAoB,SAACK,GACnB,EAAKF,UAAS,SAACC,GAAD,MAAgB,CAC5BV,cAAc,YAAKU,EAAUV,cAAcY,QAAO,SAAAC,GAAI,OAAIA,IAASF,W,EAIvEG,iBAAmB,WACjB,EAAKL,UAAS,iBAAO,CACnBT,cAAe,Q,EAInBe,iBAAmB,SAACf,GAClB,OAAQA,EAAcgB,QACpB,KAAK,EACH,MAAO,oBAGT,KAAK,EACH,MAAM,GAAN,OAAUhB,EAAc,GAAxB,gBAGF,QACE,OAAOA,EAAciB,KAAK,MAAMC,QAAQ,eAAgB,SAASC,OAAO,kB,4CAK9E,WAAU,IAAD,OACCnB,EAAkBoB,KAAKrB,MAAvBC,cAER,OACE,sBAAKqB,UAAU,MAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,6BACGD,KAAKL,iBAAiBf,KAEvBA,EAAcgB,OAAS,GACvB,wBACEM,KAAK,SACLD,UAAU,eACVE,QAASH,KAAKN,iBAHhB,kBASJ,oBAAIO,UAAU,aAAd,SACGxB,EAAgB2B,KAAI,SAAAX,GAAI,OACvB,qBAAeQ,UAAU,mBAAzB,UACE,mBACEI,KAAK,IACLJ,UAAWrB,EAAcK,SAASQ,GAC9B,0BACA,mBACJU,QAAS,SAACrB,GACR,EAAKD,YAAYC,EAAOW,IAN5B,SASGA,IAEH,wBACES,KAAK,SACLC,QAAS,WACFvB,EAAcK,SAASQ,GAG1B,EAAKP,kBAAkBO,GAFvB,EAAKN,eAAeM,IAJ1B,SAUIb,EAAcK,SAASQ,GAErB,SADA,UAvBCA,e,GAvEHa,IAAMC,WAyGT7B,IC9Hf8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4b0209f9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {\n\n};\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<Props, State> {\n  state: State = {\n    selectedGoods: [],\n  };\n\n  clickOnGood = (event: React.MouseEvent, currGood: string) => {\n    event.preventDefault();\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.includes(currGood)) {\n      this.removeButtonClick(currGood);\n    } else {\n      this.addButtonClick(currGood);\n    }\n  };\n\n  addButtonClick = (goodToAdd: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods, goodToAdd],\n    }));\n  };\n\n  removeButtonClick = (goodToRemove: string) => {\n    this.setState((prevState) => ({\n      selectedGoods: [...prevState.selectedGoods.filter(good => good !== goodToRemove)],\n    }));\n  };\n\n  resetButtonClick = () => {\n    this.setState(() => ({\n      selectedGoods: [],\n    }));\n  };\n\n  getSelectedGoods = (selectedGoods: string[]) => {\n    switch (selectedGoods.length) {\n      case 0: {\n        return 'No goods selected';\n      }\n\n      case 1: {\n        return `${selectedGoods[0]} is selected`;\n      }\n\n      default: {\n        return selectedGoods.join(', ').replace(/, (?=[^,]+$)/, ' and ').concat(' is selected');\n      }\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"result-container\">\n          <h1>\n            {this.getSelectedGoods(selectedGoods)}\n          </h1>\n          { selectedGoods.length > 0 && (\n            <button\n              type=\"button\"\n              className=\"reset-button\"\n              onClick={this.resetButtonClick}\n            >\n              X\n            </button>\n          )}\n        </div>\n        <ul className=\"goods-list\">\n          {goodsFromServer.map(good => (\n            <li key={good} className=\"goods-list__item\">\n              <a\n                href=\"/\"\n                className={selectedGoods.includes(good)\n                  ? 'active goods-list__link'\n                  : 'goods-list__link'}\n                onClick={(event) => {\n                  this.clickOnGood(event, good);\n                }}\n              >\n                {good}\n              </a>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  if (!selectedGoods.includes(good)) {\n                    this.addButtonClick(good);\n                  } else {\n                    this.removeButtonClick(good);\n                  }\n                }}\n              >\n                {!selectedGoods.includes(good)\n                  ? 'Add'\n                  : 'Remove'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}